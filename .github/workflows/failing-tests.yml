name: Test Failures Demo
on:
  push:
    branches: [main, master]
  pull_request:  # Changed from pull_request_target for security
    branches: [main]

jobs:
  python-tests:
    runs-on: ubuntu-latest  # Updated from deprecated ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]  # Updated from EOL versions
      fail-fast: false  # Allow other matrix jobs to continue if one fails
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated from v2
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5  # Updated from v3
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip packages
        uses: actions/cache@v4  # Updated from v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8 mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f pyproject.toml ]; then pip install -e .; fi
          
      - name: Run linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true  # Don't fail the build on linting issues
          
      - name: Run type checking
        run: |
          mypy . --ignore-missing-imports
        continue-on-error: true  # Don't fail the build on type issues
          
      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing tests/
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4  # Updated from v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false  # Don't fail if codecov upload fails

  integration-tests:
    runs-on: ubuntu-latest
    needs: python-tests
    
    services:
      postgres:
        image: postgres:15  # Updated version
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432  # Added missing port mapping
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest psycopg2-binary
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          
      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
        run: |
          pytest tests/ -m integration